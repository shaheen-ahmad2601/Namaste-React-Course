
/*
Header
 - Logo
 -Nav items

Body 
- search
- cartRestro container
  - Restro cart
    - img
    - name of restro , start ratings , cuisine , deleviry time


Footer
- Copyrights
- links
-adress
-contacts
*/

- config driven ui. - 
- ui layer + data layer -> makes frontend.
- to see the actual api and can be used also, goto network then priview and refresh the page you will get the data.
- we can take the json data and and can get the data in a single object or we can create the array of objects then we ca access that with index value , both approach is not good , we can also map our data to avoid the complexity of the code.

- whatever the data is you can use map funciton to loop through the data and can render it.

- we can also create react app with cdn links and just installing react and reactdom in our json file without installing it with proper setup 

- we can pass the key in the component res.data.id for unique key to render a list.
you have to always pass the key 

=> why you need to pass the key , lets suppose a new card comes in the array so react does not know which cart just came in the array or which one has been rendered so that is why we need to pass the key so that react can track the card ids , if you dont pass the key then react will rerender all the cards and it will hamper the performance of the app.

-> Container 
  - card-1
  - card-2
  - card-3
  - card-4

  here these cards is not having any keys , lets suppose a new card comes in the array so what react will do it will render all the cards becasue react does not know which card is new bcos noone is having the key , then react will rerender all the cards again and will impact the performance of the app.

  - map(res,index)- we can pass index as the key in 2nd parameter 
  key={index} this looks fine logically but react does not recommends this to use.

  - if there is no id in the data then we can use index as key



  ----------------------------------------Hooks lec-4------------------------------

  make a file stucture 
  use js or jsx extension doesnot matter both is being used to add functionality to the code.

  - there are two types of exports 
    - default export - I can export one time only 
    - named export - but for multiple value we can use named export, use curly braces{} to import named export


    react is having two layer
     - UI layer
     - data layer 
     if the data layer is having only two data so the ui will render 2 data cards only

     - React Hooks is normal js utility functions that enable the super power of hooks that we use , its a normal basic js code written with somw logic to perform some particular tasks

     => in node_modules the react code is exported react file then we import it like react form "react"
     => useState is exported as named function that is why we use like this {useState} from "react".

     - whenever a state variable updates react rerender the components.